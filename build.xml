<?xml version="1.0" encoding="UTF-8"?>

<!--

   Ant build script.

   author: fracpete (fracpete at waikato dot ac dot nz)
   version: $Revision$

-->

<project name="moa" default="dist-standalone" basedir=".">
   <!-- compile options -->
   <property name="build.sysclasspath" value="ignore" />
   <property name="build.compiler"     value="modern" />
   <property name="debug"              value="on" />
   <property name="deprecation"        value="off" />
   <property name="optimization"       value="off" />
   <property environment="env"/>

   <!-- directories -->
   <property name="dist"          value="target" />
   <property name="build"         value="target/classes" />
   <property name="doc"           value="doc" />
   <property name="apidoc"        value="doc/api" />
   <property name="tutorial"      value="doc/tutorial" />
   <property name="src"           value="src/main/java" />
   <property name="scripts"       value="src/main/scripts" />
   <property name="lib"           value="lib" />

   <!-- running the application -->
   <!-- max memory for application -->
   <property name="memory"  value="800m"/>
   <!-- the main class -->
   <property name="main_class" value="moa.gui.GUI"/>
   <!-- e.g., "-XX:+UseConcMarkSweepGC" for parallel GC -->
   <property name="jvm_options" value="-javaagent:${dist}/sizeofag.jar"/>

   <!-- CLASSPATH -->
   <path id="project.class.path">
      <pathelement location="." />
      <fileset dir="${lib}">
         <include name="*.jar"/>
         <include name="*.zip"/>
      </fileset>
   </path>

   <!-- targets -->
   <target name="init" depends="setup, copyFiles" description="Initializes the Project."/>

   <target name="setup" description="Creates the output directories.">
      <tstamp />
      <mkdir dir="${build}" />
      <mkdir dir="${dist}" />
      <mkdir dir="${apidoc}" />
   </target>

   <target name="copyFiles" description="Copies files to the ${dist}/${build} directories.">
      <copy todir="${dist}">
         <fileset dir="${lib}" includes="sizeofag.jar"/>
      </copy>
      <copy todir="${build}">
         <fileset dir="${src}" includes="**/*.gif"/>
         <fileset dir="${src}" includes="**/*.jpg"/>
         <fileset dir="${src}" includes="**/*.png"/>
         <fileset dir="${src}" includes="**/*.props"/>
         <fileset dir="${src}" includes="**/*.txt"/>
      </copy>
   </target>

   <!-- removeJar -->
   <target name="removeJar" description="Deletes the current jar archive.">
      <delete file="${dist}/${ant.project.name}.jar"/>
   </target>

   <!-- clean -->
   <target name="clean" depends="removeJar, cleanTmp" description="Removes autogenerated files.">
      <delete failonerror="false">
         <fileset dir="${basedir}" defaultexcludes="no">
            <include name="**/*.class" />
         </fileset>
      </delete>

      <delete dir="${build}" failonerror="false" />
      <delete dir="${dist}" failonerror="false" />
   </target>

   <!-- cleanTmp -->
   <target name="cleanTmp" description="Removes temporary files.">
      <delete failonerror="false">
         <fileset dir="${basedir}" defaultexcludes="no">
            <include name="**/*.scc" />
            <include name="**/*~" />
            <include name="**/.#*" />
         </fileset>
      </delete>
   </target>

   <!-- update -->
   <target name="update" depends="init" description="Updates the weka.jar.">
     <condition property="weka_ok">
       <isset property="weka"/>
     </condition>
     <fail message="Property 'weka' not set! Use '-Dweka=...' to set the WEKA project directory." unless="weka_ok"/>

     <ant inheritAll="false" dir="${weka}" target="clean"/>
     <ant inheritAll="false" dir="${weka}" target="exejar"/>
     <copy todir="${lib}">
       <fileset dir="${weka}/dist" includes="weka.jar"/>
     </copy>
   </target>

   <!-- unzip-full -->
   <target name="unzip-full" depends="init">
      <unzip dest="${build}">
         <fileset dir="${lib}">
            <include name="*.jar"/>
            <exclude name="sizeofag.jar"/>
         </fileset>
      </unzip>
   </target>

   <!-- unzip-standalone -->
   <target name="unzip-standalone" depends="init">
      <unzip dest="${build}">
         <fileset dir="${lib}">
            <include name="*.zip"/>
         </fileset>
      </unzip>
   </target>

   <!-- compile -->
   <target name="compile" depends="init" description="Compiles the classes.">
      <echo message="Compiling classes for ${ant.project.name}." />

      <javac destdir="${build}" optimize="${optimization}"
             debug="${debug}" deprecation="${deprecation}"
             fork="yes" memoryMaximumSize="256m"
             source="1.5" target="1.5">
         <src path="${src}"/>
         <include name="**/*"/>

         <classpath refid="project.class.path" />
         <classpath>
            <pathelement path="${java.class.path}" />
            <pathelement location="." />
         </classpath>
      </javac>
   </target>

   <!-- dist-full -->
   <target name="dist-full" depends="init, removeJar, unzip-full, compile" description="Generates the jar archive, includes all jars in the 'lib' directory.">
      <!-- classes -->
      <jar jarfile="${dist}/${ant.project.name}.jar">
         <fileset dir="${build}">
            <include name="*" />
            <include name="**/*" />
         </fileset>

         <manifest>
            <attribute name="Built-By"   value="${user.name}"/>
            <attribute name="Main-Class" value="${main_class}"/>
         </manifest>
      </jar>
   </target>

   <!-- dist-standalone -->
   <target name="dist-standalone" depends="init, removeJar, unzip-standalone, compile" description="Generates the jar archive, includes all zip files in the 'lib' directory.">
      <!-- classes -->
      <jar jarfile="${dist}/${ant.project.name}.jar">
         <fileset dir="${build}">
            <include name="*" />
            <include name="**/*" />
         </fileset>

         <manifest>
            <attribute name="Built-By"   value="${user.name}"/>
            <attribute name="Main-Class" value="${main_class}"/>
         </manifest>
      </jar>
   </target>

   <!-- dist-minimal -->
   <target name="dist-minimal" depends="init, removeJar, compile" description="Generates the jar archive, does not include any jar/zip files in the 'lib' directory.">
      <!-- classes -->
      <jar jarfile="${dist}/${ant.project.name}.jar">
         <fileset dir="${build}">
            <include name="*" />
            <include name="**/*" />
         </fileset>

         <manifest>
            <attribute name="Built-By"   value="${user.name}"/>
            <attribute name="Main-Class" value="${main_class}"/>
         </manifest>
      </jar>
   </target>

   <!-- src -->
   <target name="src" depends="cleanTmp" description="Generates are gzipped tar from the source code.">
     <tar destfile="${dist}/${ant.project.name}-src.tar.gz"
          basedir="."
          includes="*.xml .classpath.default .project.default ${src}/**/* ${scripts}/**/* ${tutorial}/**/* ${doc}/* ${lib}/*.jar ${lib}/*.zip"
          compression="gzip"/>
   </target>

   <!-- documentation -->
   <target name="documentation" depends="javadoc, tutorial" description="Generates all the documentation."/>

   <!-- tutorial -->
   <target name="tutorial" description="Generates the tutorial PDF from the LaTeX sources.">
     <exec executable="pdflatex" dir="${tutorial}/src">
        <arg value="tutorial.tex"/>
     </exec>
     <copy todir="${tutorial}">
        <fileset dir="${tutorial}/src" includes="tutorial.pdf"/>
     </copy>
   </target>

   <!-- javadoc -->
   <target name="javadoc" description="Generates the JavaDoc documentation.">
      <javadoc destdir="${apidoc}"
               access="protected"
               use="true"
               notree="false"
               nonavbar="false"
               noindex="false"
               splitindex="true"
               author="true"
               version="true"
               nodeprecatedlist="false"
               nodeprecated="false"
               sourcepath="${src}"
               doctitle="${ant.project.name} API"
               packagenames="*"
               maxmemory="256m">
        <classpath refid="project.class.path" />
      </javadoc>
   </target>

   <!-- release -->
   <target name="release" depends="clean, dist-standalone, src, documentation" description="Generates a release archive.">
     <tstamp/>
     <tar destfile="${dist}/${ant.project.name}-release-${DSTAMP}.tar.gz"
          compression="gzip">
       <tarfileset dir="${scripts}" mode="755" prefix="${ant.project.name}-${DSTAMP}">
         <include name="moa.*"/>
       </tarfileset>
       <tarfileset dir="${dist}" prefix="${ant.project.name}-${DSTAMP}">
         <include name="${ant.project.name}.jar"/>
         <include name="sizeofag.jar"/>
         <include name="${ant.project.name}-src.tar.gz"/>
       </tarfileset>
       <tarfileset dir="." prefix="${ant.project.name}-${DSTAMP}">
         <include name="${tutorial}/*.pdf"/>
         <include name="${tutorial}/*.java"/>
         <include name="${apidoc}/**/*"/>
       </tarfileset>
     </tar>
   </target>

   <!-- run-moa -->
   <target name="run-moa" depends="dist-minimal" description="Starts the MOA GUI.">
      <java classname="${main_class}" fork="yes" maxmemory="${memory}">
         <classpath>
            <pathelement path="${java.class.path}" />
            <fileset dir="${dist}">
               <include name="*.jar"/>
               <include name="*.zip"/>
            </fileset>
         </classpath>
         <jvmarg line="${jvm_options}"/>
      </java>
   </target>

   <!-- run-weka -->
   <target name="run-explorer" depends="dist-minimal" description="Starts the WEKA Explorer.">
      <java classname="weka.gui.explorer.Explorer" fork="yes" maxmemory="${memory}">
         <classpath>
            <pathelement path="${java.class.path}" />
            <fileset dir="${dist}">
               <include name="*.jar"/>
               <include name="*.zip"/>
            </fileset>
         </classpath>
         <jvmarg line="${jvm_options}"/>
      </java>
   </target>

   <!-- run-guichooser -->
   <target name="run-guichooser" depends="dist-minimal" description="Starts the WEKA GUIChooser.">
      <java classname="weka.gui.GUIChooser" fork="yes" maxmemory="${memory}">
         <classpath>
            <pathelement path="${java.class.path}" />
            <fileset dir="${dist}">
               <include name="*.jar"/>
               <include name="*.zip"/>
            </fileset>
         </classpath>
         <jvmarg line="${jvm_options}"/>
      </java>
   </target>
</project>
